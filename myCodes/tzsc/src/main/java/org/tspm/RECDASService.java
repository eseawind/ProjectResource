package org.tspm;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2016-11-24T19:29:42.337+08:00
 * Generated source version: 3.1.6
 * 
 */
@WebServiceClient(name = "REC_DAS_Service", 
                  wsdlLocation = "file:/F:/REC_DAS-Service.wsdl",
                  targetNamespace = "http://tempuri.org/") 
public class RECDASService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "REC_DAS_Service");
    public final static QName RECDASServiceHttpGet = new QName("http://tempuri.org/", "REC_DAS_ServiceHttpGet");
    public final static QName RECDASServiceSoap = new QName("http://tempuri.org/", "REC_DAS_ServiceSoap");
    public final static QName RECDASServiceSoap12 = new QName("http://tempuri.org/", "REC_DAS_ServiceSoap12");
    public final static QName RECDASServiceHttpPost = new QName("http://tempuri.org/", "REC_DAS_ServiceHttpPost");
    static {
        URL url = null;
        try {
            url = new URL("file:/F:/REC_DAS-Service.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(RECDASService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/F:/REC_DAS-Service.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public RECDASService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RECDASService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RECDASService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public RECDASService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public RECDASService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public RECDASService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns RECDASServiceHttpGet
     */
    @WebEndpoint(name = "REC_DAS_ServiceHttpGet")
    public RECDASServiceHttpGet getRECDASServiceHttpGet() {
        return super.getPort(RECDASServiceHttpGet, RECDASServiceHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RECDASServiceHttpGet
     */
    @WebEndpoint(name = "REC_DAS_ServiceHttpGet")
    public RECDASServiceHttpGet getRECDASServiceHttpGet(WebServiceFeature... features) {
        return super.getPort(RECDASServiceHttpGet, RECDASServiceHttpGet.class, features);
    }


    /**
     *
     * @return
     *     returns RECDASServiceSoap
     */
    @WebEndpoint(name = "REC_DAS_ServiceSoap")
    public RECDASServiceSoap getRECDASServiceSoap() {
        return super.getPort(RECDASServiceSoap, RECDASServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RECDASServiceSoap
     */
    @WebEndpoint(name = "REC_DAS_ServiceSoap")
    public RECDASServiceSoap getRECDASServiceSoap(WebServiceFeature... features) {
        return super.getPort(RECDASServiceSoap, RECDASServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns RECDASServiceSoap
     */
    @WebEndpoint(name = "REC_DAS_ServiceSoap12")
    public RECDASServiceSoap getRECDASServiceSoap12() {
        return super.getPort(RECDASServiceSoap12, RECDASServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RECDASServiceSoap
     */
    @WebEndpoint(name = "REC_DAS_ServiceSoap12")
    public RECDASServiceSoap getRECDASServiceSoap12(WebServiceFeature... features) {
        return super.getPort(RECDASServiceSoap12, RECDASServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns RECDASServiceHttpPost
     */
    @WebEndpoint(name = "REC_DAS_ServiceHttpPost")
    public RECDASServiceHttpPost getRECDASServiceHttpPost() {
        return super.getPort(RECDASServiceHttpPost, RECDASServiceHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RECDASServiceHttpPost
     */
    @WebEndpoint(name = "REC_DAS_ServiceHttpPost")
    public RECDASServiceHttpPost getRECDASServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(RECDASServiceHttpPost, RECDASServiceHttpPost.class, features);
    }

}
